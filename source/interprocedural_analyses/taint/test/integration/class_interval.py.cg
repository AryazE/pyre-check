@generated
Call dependencies
class_interval.$toplevel (fun) -> []
class_interval.A0::$class_toplevel (method) -> []
class_interval.A0::m1 (method) -> [class_interval.A0::m2 (override)]
class_interval.A0::m2 (method) -> []
class_interval.A1::$class_toplevel (method) -> []
class_interval.A1::m1 (method) -> [class_interval.A1::m2 (override)]
class_interval.A1::m2 (method) -> []
class_interval.A2::$class_toplevel (method) -> []
class_interval.A2::m1 (method) -> [class_interval.A2::m2 (override)]
class_interval.A2::m2 (method) -> []
class_interval.A3::$class_toplevel (method) -> []
class_interval.A3::m1 (method) -> [class_interval.A3::m2 (override)]
class_interval.A3::m2 (method) -> []
class_interval.A4::$class_toplevel (method) -> []
class_interval.A4::m2 (method) -> [class_interval.A4::m3 (override)]
class_interval.A4::m3 (method) -> []
class_interval.A5::$class_toplevel (method) -> []
class_interval.A5::m1 (method) -> [class_interval.A5::m2 (override)]
class_interval.A5::m2 (method) -> []
class_interval.B0::$class_toplevel (method) -> []
class_interval.B0::m0 (method) -> [class_interval.A0::m1 (method)]
class_interval.B1::$class_toplevel (method) -> []
class_interval.B1::m0 (method) -> [class_interval.B1::m1 (method)]
class_interval.B1::m1 (method) -> []
class_interval.B2::$class_toplevel (method) -> []
class_interval.B2::m0 (method) -> [class_interval.A2::m1 (method)]
class_interval.B3::$class_toplevel (method) -> []
class_interval.B3::m0 (method) -> [class_interval.A3::m1 (method)]
class_interval.B4::$class_toplevel (method) -> []
class_interval.B4::m1 (method) -> [class_interval.A4::m2 (method)]
class_interval.B5::$class_toplevel (method) -> []
class_interval.B5::m0 (method) -> [class_interval.A5::m1 (method)]
class_interval.C0::$class_toplevel (method) -> []
class_interval.C0::m2 (method) -> [_test_sink (fun)]
class_interval.C1::$class_toplevel (method) -> []
class_interval.C1::m2 (method) -> [_test_sink (fun)]
class_interval.C2::$class_toplevel (method) -> []
class_interval.C2::m2 (method) -> []
class_interval.C3::$class_toplevel (method) -> []
class_interval.C3::m0 (method) -> [class_interval.A3::m1 (method)]
class_interval.C3::m2 (method) -> [_test_sink (fun)]
class_interval.C4::$class_toplevel (method) -> []
class_interval.C4::m3 (method) -> [_test_sink (fun)]
class_interval.C5::$class_toplevel (method) -> []
class_interval.D2::$class_toplevel (method) -> []
class_interval.D2::m2 (method) -> [_test_sink (fun)]
class_interval.D3::$class_toplevel (method) -> []
class_interval.D3::m0 (method) -> []
class_interval.D3::m2 (method) -> []
class_interval.D4::$class_toplevel (method) -> []
class_interval.D4::m0 (method) -> [class_interval.B4::m1 (method)]
class_interval.D5::$class_toplevel (method) -> []
class_interval.D5::m2 (method) -> [_test_sink (fun)]
class_interval.canonical_example (fun) -> [_test_source (fun) class_interval.B0::m0 (method)]
class_interval.multiple_inheritance (fun) -> [_test_source (fun) class_interval.B2::m0 (method)]
class_interval.no_call_to_parent_class (fun) -> [_test_source (fun) class_interval.B1::m0 (method)]
class_interval.sink_in_subclass (fun) -> [_test_source (fun) class_interval.B3::m0 (override)]
class_interval.sink_two_hops (fun) -> [_test_source (fun) class_interval.B5::m0 (method)]
class_interval.source_two_hops (fun) -> [_test_source (fun) class_interval.D4::m0 (method)]
