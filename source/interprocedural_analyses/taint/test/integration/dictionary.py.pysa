dictionary.tainted_dictionary: TaintSink[Test] = ...
@SkipObscure
def dict.update(self, __m: TaintInTaintOut[Updates[self]]): ...
@SkipObscure
def dict.get(self: TaintInTaintOut[LocalReturn], __k, __default = ...): ...
@SkipObscure
def typing.Mapping.get(self: TaintInTaintOut[LocalReturn], __key, default = ...): ...
